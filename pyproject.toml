[project]
name = "infrastructure"
version = "0.1.0"
description = ""
authors = [
    {name = "joaobarreto27",email = "joao.vito1951@gmail.com"}
]
readme = "README.md"
packages = [
    { include = "worker", from = "src" },
    { include = "infrastructure", from = "src" }
]
requires-python = ">=3.11, <3.12"
dependencies = [
    "isort (>=6.0.1,<7.0.0)",
    "pip-audit (>=2.9.0,<3.0.0)",
    "taskipy (>=1.14.1,<2.0.0)",
    "pre-commit (>=4.3.0,<5.0.0)",
    "black (>=25.1.0,<26.0.0)",
    "python-dotenv (>=1.1.1,<2.0.0)",
    "ruff (>=0.12.11,<0.13.0)",
    "requests (>=2.32.5,<3.0.0)",
    "types-requests (>=2.32.4.20250809,<3.0.0.0)",
    "pyspark (==3.4.4)",
    "pydantic (>=2.11.7,<3.0.0)",
    "pandas (>=2.3.3,<3.0.0)",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint]
ignore = ["D203", "D213"]

[tool.poetry.group.dev.dependencies]
ruff = "^0.12.11"
mypy = "^1.17.1"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"

[tool.taskipy.tasks]
format = "isort . && black ."
test = "poetry run pytest -v"
kill = "kill -9 $(lsof -t -i :8000)"
docs = "mkdocs serve"
docs-deploy = "mkdocs gh-deploy --clean"
commit = "poetry run pre-commit run --all-files"
check_ruff = "ruff check src/infrastructure/data/currency_quotes/quotes_btc_daily_event/service/quotes_btc_daily_event.py --fix"
ruff_format = "ruff format src/infrastructure/data/currency_quotes/quotes_btc_daily_event/service/quotes_btc_daily_event.py"

[tool.mypy]
files = ["src"]
mypy_path = ["src"]
explicit_package_bases = true
